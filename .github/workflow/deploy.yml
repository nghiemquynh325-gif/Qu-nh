name: Deploy to GitHub Pages

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Auto-tagging job (only on master push)
  create-tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    outputs:
      version: ${{ steps.tag.outputs.version }}
      release_notes: ${{ steps.tag.outputs.release_notes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y.%m.%d')" >> $GITHUB_OUTPUT

      - name: Generate version tag
        id: tag
        run: |
          # Generate version based on date and build number
          DATE=$(date +'%Y.%m.%d')
          BUILD_NUMBER=$(date +'%H%M')
          VERSION="v${DATE}.${BUILD_NUMBER}"
          
          # Get commit message as release notes (first line only, clean format)
          RELEASE_NOTES=$(git log -1 --pretty=format:"%s" | sed 's/"/\\"/g')
          
          # Get commit hash for reference
          COMMIT_HASH=$(git rev-parse --short HEAD)
          
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "release_notes=${RELEASE_NOTES}" >> $GITHUB_OUTPUT
          echo "commit_hash=${COMMIT_HASH}" >> $GITHUB_OUTPUT
          
          echo "🏷️ Generated version: ${VERSION}"
          echo "📝 Release notes: ${RELEASE_NOTES}"
          echo "🔗 Commit: ${COMMIT_HASH}"

      - name: Create and push tag
        run: |
          VERSION="${{ steps.tag.outputs.version }}"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "${VERSION}" -m "Release ${{ steps.tag.outputs.version }}: ${{ steps.tag.outputs.release_notes }}"
          git push origin "${VERSION}"
          echo "✅ Created and pushed tag: ${VERSION}"

  # Build job
  build:
    runs-on: ubuntu-latest
    needs: [create-tag]
    if: always() && (needs.create-tag.result == 'success' || needs.create-tag.result == 'skipped')
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build
      run: npm run build
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
